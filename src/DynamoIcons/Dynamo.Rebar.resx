<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Rebar.Rebar.Actions.Cut.Large" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MwCGZxD9H7XXfxTLJ/i7AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="Rebar.Rebar.Actions.Cut.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAScAAAEnAGuc4lFAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAABB9JREFUWEfFl/tTU0cUx/tntbYdtNqp1lbptCPVolRbIT7qA8cKM2gd
        H6ilSqygFhBrgRsp9VmpKUVAvSQRAxIZEFEjNPLKUOUNNZCv59y9mxC9iQFh+M6cye7m3vP97Dn7w963
        MMPq8vbrI2PNCMDQ8P+w17phzquAKcWirxpr2gDGx/1oaulE/lkbvkv7HUk7lEBE0hsDtHf14vzVemza
        fR6xGxTEbw0azxhAb/8wrqnN2J15Fcs2KfjwWwVvr1KwdL2C979+FSKSogZ47huD09WGY6erEJ9swaIk
        BZ+YhLGMhYkKPqKYkxAKEUkRAfx+P1rc3ThT4kBiagliaYfz1gQNeT5f3z3Hu2T8+UYxnrv2D2zZf2Vq
        AP89G4S1shHfH7iMz6ivMbopG3y5WcF7VGaev0PBc/7V5gkWpJorsDHPjYPlPmSrPuw0l+tZjRUC4Gp6
        gvSsMizbbAn0lXs8d8KuucfLyZRheL6Ankva+zdMJ1qwzzoK9TGQXwNkVAE33UCu/Tk8vbqBgTQAP0Xr
        U2D7UVXrnzTjmEPxBZWV+yvXYlYrWJt2EasP12PXpX64OsjoljAtqAUqH4qxtRmw3AHMNxEWQgPwDhL1
        bSA5U0Uc7fiDb0IhOBbTgYtLLkHcHhu2F3WiwOnH3U7gJzLKqgaauoUpzxu7xPhcA3C5UYzDQWgAPcNA
        tQdISBcVWLJO9JYPHPd1SYroa6HTpyU/pgYNap/ou70P/NkkxgzGhr85gWsPxFo4iACAnRLtyFID/f54
        SynMxY2oeTSCHEcwyS92oNkLnKaK8bz0HlD1SIzvURUY7gqBMNxxG+VtC77L8TJECEBKtoql1O8jZf2B
        F06SYR39d6ddJOS1zBtiLst7gw4bg/Dhu04wPxNEUa0fGf/4kGkdxp7iPqSd6UHqKS+2ZXUg+SiVW9cr
        ALEEoNL/eZSMDQ9fFyanaN5ApXXQjtiA19jM1irGZ+vGsf/CALZld2BFyn3Mi3ciZvntsCFlCMBjhviL
        TjGX1U4msg2FdMp5TfY2t2oEGzLaMH9lnaFRuJAKCyAhuBK8+1v/ipPOZT9CVfnVMQbTwVbD5NGEVESA
        iRC8WzZmgELbKBYnugwTRxtSrwV4GeJQ6QgWJEyu3EYhFRUAB0PkVI/h03V3DRNONqSiBuAoqOg1TDaV
        kNIAno0Ig1kDYLUPzDIA68f8WQbIKVLpujXLAHyFyrtQ/0YAX21twA/mhzipeHCp3IsaVx8etA7RDXoU
        fQM+ul+O645hAPhjoqzGEzXAojV1OHDiMSodTzWDySgEwHLRqd3xvT10Ikl8MCMBxJrqcc7aTV9CY9rz
        U1EIgJEmQkwESD/uxuDQ1I2lXgvAkhASoLiUrkXTpKgAWAzBALnFRDKNihqA1eIZ1T5Cp0/AC5oGScCe
        P1pUAAAAAElFTkSuQmCC
</value>
  </data>
</root>